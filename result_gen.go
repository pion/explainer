// SPDX-FileCopyrightText: 2023 The Pion community <https://pion.ly>
// SPDX-License-Identifier: MIT

// Code generated by "json-ice --type=Result"; DO NOT EDIT.

package explainer

func MarshalResultAsJSON(s *Result) ([]byte, error) {
	buff := make([]byte, 1, 236)
	buff[0] = '{'
	if s.Errors == nil {
		buff = append(buff, "\"errors\":null,"...)
	} else {
		buff = append(buff, "\"errors\":"...)
		buff = append(buff, '[')
		for _, v := range s.Errors {
			if marshaled, err := v.MarshalJSON(); err != nil {
				return nil, err
			} else {
				buff = append(buff, marshaled...)
			}

			buff = append(buff, ',')
		}
		if buff[len(buff)-1] == ',' {
			buff[len(buff)-1] = ']'
		} else {
			buff = append(buff, ']')
		}

		buff = append(buff, ',')
	}
	if s.Warnings == nil {
		buff = append(buff, "\"warnings\":null,"...)
	} else {
		buff = append(buff, "\"warnings\":"...)
		buff = append(buff, '[')
		for _, v := range s.Warnings {
			if marshaled, err := v.MarshalJSON(); err != nil {
				return nil, err
			} else {
				buff = append(buff, marshaled...)
			}

			buff = append(buff, ',')
		}
		if buff[len(buff)-1] == ',' {
			buff[len(buff)-1] = ']'
		} else {
			buff = append(buff, ']')
		}

		buff = append(buff, ',')
	}
	if s.Suggestions == nil {
		buff = append(buff, "\"suggestions\":null,"...)
	} else {
		buff = append(buff, "\"suggestions\":"...)
		buff = append(buff, '[')
		for _, v := range s.Suggestions {
			if marshaled, err := v.MarshalJSON(); err != nil {
				return nil, err
			} else {
				buff = append(buff, marshaled...)
			}

			buff = append(buff, ',')
		}
		if buff[len(buff)-1] == ',' {
			buff[len(buff)-1] = ']'
		} else {
			buff = append(buff, ']')
		}

		buff = append(buff, ',')
	}
	buff = append(buff, "\"localDetails\":"...)
	if marshaled, err := s.LocalDetails.MarshalJSON(); err != nil {
		return nil, err
	} else {
		buff = append(buff, marshaled...)
	}

	buff = append(buff, ',')
	buff = append(buff, "\"remoteDetails\":"...)
	if marshaled, err := s.RemoteDetails.MarshalJSON(); err != nil {
		return nil, err
	} else {
		buff = append(buff, marshaled...)
	}

	buff = append(buff, ',')
	buff = append(buff, "\"sessionDetails\":"...)
	if marshaled, err := s.SessionDetails.MarshalJSON(); err != nil {
		return nil, err
	} else {
		buff = append(buff, marshaled...)
	}

	buff = append(buff, ',')
	if buff[len(buff)-1] == ',' {
		buff[len(buff)-1] = '}'
	} else {
		buff = append(buff, '}')
	}
	return buff, nil
}
